{"version":3,"sources":["stateless.jsx","counterApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","klik","text","ExampleUseState","useState","balance","setBalance","alert","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAMiBA,EANF,SAACC,GACZ,OACE,wBAAQC,QAASD,EAAME,KAAvB,SAA8BF,EAAMG,QCmE3BC,MAlEf,WACI,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACI,2DAC2BD,EACzB,uBACA,uBAHF,2BAKE,uBACA,wBAAQL,QAAS,kBAAMM,EAAWD,EAAQ,MAA1C,6BACA,wBAAQL,QAAS,kBAAMM,EAAWD,EAAQ,MAA1C,6BACA,uBARF,0BAUE,uBACA,cAAC,EAAD,CAAQJ,KAAM,WAAOM,MAAM,gBAA6B,IAAZF,EAAgBE,MAAM,gBAAiBD,EAAWD,EAAQ,MAAQH,KAAM,uBCW/GM,MAzBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.842d61d0.chunk.js","sourcesContent":["const Button = (props) => {\r\n    return(\r\n      <button onClick={props.klik}>{props.text}</button>\r\n    )\r\n  }\r\n  \r\n  export default Button","import React, { useState } from 'react'\r\nimport Button from './stateless'\r\n\r\nfunction ExampleUseState(){\r\n    const [balance, setBalance] = useState(0)\r\n\r\n    return (\r\n        <div>\r\n          Saldo anda adalah : Rp. {balance}\r\n          <br />\r\n          <hr />\r\n          Apakah mau tambah saldo?\r\n          <br />\r\n          <button onClick={() => setBalance(balance+1000)}>Tambbah Rp.1000</button>\r\n          <button onClick={() => setBalance(balance+5000)}>Tambbah Rp.5000</button>\r\n          <hr />\r\n          Apakah mau tarik saldo?\r\n          <br/>\r\n          <Button klik={() => {alert('Anday yakin?'); balance === 0 ? alert('SALDO KOSONG'): setBalance(balance-1000)}} text={\"Tarik Rp. 1000\"}/>\r\n        </div>\r\n      )\r\n}\r\n// class StatefullExample extends Component {\r\n//     constructor(){\r\n//       super()\r\n//       this.state = {\r\n//         balance : 0\r\n//       }\r\n//     }\r\n  \r\n//     addSaldo1000(){\r\n//       this.setState({\r\n//         balance: this.state.balance + 1000\r\n//       })\r\n//     }\r\n  \r\n//     addSaldo5000(){\r\n//       this.setState({\r\n//         balance: this.state.balance + 5000\r\n//       })\r\n//     }\r\n  \r\n//     tarikSaldo1000(){\r\n//       alert('Anday yakin?')\r\n//       this.setState({\r\n//         balance: this.state.balance - 1000\r\n//       })\r\n//     }\r\n  \r\n//     render() {\r\n//       return (\r\n//         <div>\r\n//           Saldo anda adalah : Rp. {this.state.balance}\r\n//           <br />\r\n//           <hr />\r\n//           Apakah mau tambah saldo?\r\n//           <br />\r\n//           <button onClick={() => this.addSaldo1000()}>Tambbah Rp.1000</button>\r\n//           <button onClick={() => this.addSaldo5000()}>Tambbah Rp.5000</button>\r\n//           <hr />\r\n//           Apakah mau tarik saldo?\r\n//           <br/>\r\n//           {/* <button onClick={() => this.tarikSaldo1000()}>Tarik Rp.1000</button> */}\r\n//           <Button klik={() => this.tarikSaldo1000()} text={\"Tarik Rp. 1000\"}/>\r\n//         </div>\r\n//       )\r\n//     }\r\n//   }\r\n  \r\nexport default ExampleUseState","//import logo from './logo.svg';\nimport './App.css';\nimport ExampleUseState from './counterApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>Hello Everyone</h2>\n      <ExampleUseState />\n    </div>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}